name: Update CDS Proxy Data

on:
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 2 AM UTC
  workflow_dispatch:     # Allows manual run

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create script directory
        run: mkdir -p scripts

      - name: Create fetcher script
        run: |
          cat > scripts/fetch-cds-data.mjs << 'EOF'
          import fs from 'fs';
          import path from 'path';

          const https = require('https');

          // Helper to fetch CSV without node-fetch (to avoid npm)
          function fetchCsv(url) {
            return new Promise((resolve, reject) => {
              https.get(url, (res) => {
                let data = '';
                res.on('data', chunk => data += chunk);
                res.on('end', () => resolve(data));
              }).on('error', reject);
            });
          }

          const DATA_DIR = './data';
          if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR, { recursive: true });

          const config = JSON.parse(fs.readFileSync('./config/countries.json', 'utf8'));

          const YEARS = 3;
          const cutoffDate = new Date();
          cutoffDate.setFullYear(cutoffDate.getFullYear() - YEARS);
          const cutoffStr = cutoffDate.toISOString().split('T')[0];

          console.log(`Fetching from ${cutoffStr}...`);

          async function fetchFredSeries(seriesId) {
            const url = `https://fred.stlouisfed.org/graph/fredgraph.csv?id=${seriesId}`;
            console.log(`→ ${seriesId}`);
            try {
              const text = await fetchCsv(url);
              const lines = text.trim().split('\n');
              const data = {};
              for (let i = 1; i < lines.length; i++) {
                const [date, value] = lines[i].split(',');
                if (value && value !== '.' && date >= cutoffStr) {
                  const num = parseFloat(value);
                  if (!isNaN(num)) data[date] = num;
                }
              }
              return data;
            } catch (e) {
              console.error(`Error ${seriesId}:`, e.message);
              return {};
            }
          }

          (async () => {
            const allData = {};
            for (const [group, countries] of Object.entries(config)) {
              allData[group] = {};
              for (const [country, seriesId] of Object.entries(countries)) {
                allData[group][country] = await fetchFredSeries(seriesId);
                await new Promise(r => setTimeout(r, 500)); // be polite
              }
            }
            fs.writeFileSync('./data/cds-proxies.json', JSON.stringify(allData, null, 2));
            console.log('✅ Data saved!');
          })();
          EOF

      - name: Run the script
        run: node scripts/fetch-cds-data.mjs

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/
          if ! git diff --quiet HEAD; then
            git commit -m "chore: auto-update CDS proxy data $(date -u +'%Y-%m-%d')"
            git push
          else
            echo "No changes"
          fi
